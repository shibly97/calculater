{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","addSymbol","event","d","state","display","i","target","value","length","setState","test","charAt","newString","substring","clearOperator","equalOperator","realValue","eval","backOperator","newSt","history","className","id","this","onClick","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e7e7aaf1.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component{\n  constructor(props){\n      super(props);\n      this.state = {\n          display : '',\n          history : ''\n      }\n \n  }\n\n  addSymbol = (event) => {\n    var d= this.state.display;\n    var i = event.target.value;\n    // var regex1= (/[+-](?=1)/);\n    var regex = (/[+ / - *]0$/);\n    var r1 = /[+]$/;\n    var r2 = /[-]$/;\n    var r3 = /[*]$/;\n    var r4 = /[/]$/;\n    \n    if(d.length === 1 && d===\"0\" && i!==\".\"){\n      this.setState({display : i})}\n      else if( (i==='-'|| i==='+'|| i==='/'|| i==='*') && (r1.test(d)||r3.test(d)||r4.test(d))){\n     return undefined\n      }\n    else if(i=='.' && d.charAt(d.length-1) == '.' ){\n      return undefined\n    }\n    else if(regex.test(d) && i!==\".\"){\n      const newString = d.substring(0, d.length-1)\n      this.setState({display: newString+i})\n   \n    }else{\n      this.setState({display:d+i})\n    \n    }\n      \n  }\n\n  clearOperator = () =>{\n    this.setState({display : '0'})\n  }\n\n  equalOperator = () => {\n    const realValue = eval(this.state.display)\n    this.setState({display : realValue})\n  }\n\n  backOperator = () =>{\n    const newSt = this.state.display.substring(0,this.state.display.length-1)\n    this.setState({display:newSt})\n  }\n \n  render(){\n      return(\n          <div className=\"container\" id='cal'>\n              <p className=\"alert\" id='display'>{this.state.display}</p>\n \n              <button className=\"btn btn-primary\" id='one' value='1' onClick={this.addSymbol}>1</button>\n              <button className=\"btn btn-primary\" id='two' value='2' onClick={this.addSymbol}>2</button>\n              <button className=\"btn btn-primary\" id='three' value='3' onClick={this.addSymbol}>3</button>\n              <button className=\"btn btn-primary\" id='four' value='4' onClick={this.addSymbol}>4</button>\n              <button className=\"btn btn-primary\" id='five' value='5' onClick={this.addSymbol}>5</button>\n              <button className=\"btn btn-primary\" id='six' value='6' onClick={this.addSymbol}>6</button>\n              <button className=\"btn btn-primary\" id='seven' value='7' onClick={this.addSymbol}>7</button>\n              <button className=\"btn btn-primary\" id='eight' value='8' onClick={this.addSymbol}>8</button>\n              <button className=\"btn btn-primary\" id='nine' value='9' onClick={this.addSymbol}>9</button>\n              <button className=\"btn btn-primary\" id='zero' value='0' onClick={this.addSymbol}>0</button>\n              <button className=\"btn btn-primary\" id='add' value='+' onClick={this.addSymbol}>+</button>\n              <button className=\"btn btn-primary\" id='subtract' value='-' onClick={this.addSymbol}>-</button>\n              <button className=\"btn btn-primary\" id='multiply' value='*' onClick={this.addSymbol}>*</button>\n              <button className=\"btn btn-primary\" id='divide' value='/' onClick={this.addSymbol}>/</button>\n              <button className=\"btn btn-primary\" id='decimal' value='.' onClick={this.addSymbol}>.</button>\n \n              <button className=\"btn btn-primary\" id='equals' value='=' onClick={this.equalOperator}>=</button>\n              <button className=\"btn btn-primary\" id='clear' value='=' onClick={this.clearOperator}>clear</button>\n              <button className=\"btn btn-primary\" id='back' value='=' onClick={this.backOperator}>back</button>\n              \n          </div>\n      )\n  }\n \n }\n \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}